using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using CityTruck.Services.Interfaces;
using CityTruck.Common;
using CityTruck.Model;
using CityTruck.Services.Model;
using CityTruck.Business.Interfaces;
using System.Linq.Dynamic;
using LinqKit;
using CityTruck.Business;
using System.Data.Objects;

namespace CityTruck.Services
{
    public class KardexCombustibleServices : BaseService, IKardexCombustibleServices
    {
        //private ISG_LISTASManager _manListas;

        public KardexCombustibleServices(/*ISG_LISTASManager manListas*/)
        {
            //_manListas = manListas;
        }
        public IEnumerable<SG_KARDEX_COMBUSTIBLE_MN> ObtenerKardexMNCombustible(string MES, string ANIO)
        {
            IQueryable<SG_KARDEX_COMBUSTIBLE_MN> result = null;
            ExecuteManager(uow =>
            {
                var manager = new SG_KARDEX_COMBUSTIBLE_MNManager(uow);
                //result = manager.BuscarTodos();
                result = manager.ObtenerKardexPorMesyAnio(ANIO, MES);

            });
            return result;
        }


        public RespuestaSP SP_ActualizarKardexMN(DateTime FECHA, int ID_USR)
        {
            RespuestaSP result = new RespuestaSP();
            ExecuteManager(uow =>
            {
                var context = (CityTruckContext)uow.Context;
                ObjectParameter p_res = new ObjectParameter("p_res", typeof(String));
                context.P_SG_ACT_KARDEX_COMBUSTIBLE_MN(FECHA, ID_USR, p_res);
                if (p_res.Value.ToString() == "1")
                {
                    result.success = true;
                    result.msg = "Proceso Ejecutado Correctamente";
                }
                else
                {
                    result.success = false;
                    result.msg = p_res.Value.ToString();
                }

            });
            return result;
        }
    }
}
